name: "update-chrome-extension-version-action"
description: ""
inputs:
  github_token:
    description: "GitHub access token"
    required: true
    default: ""
runs:
  using: "composite"
  env:
    major_release_label: "release:major"
    minor_release_label: "release:minor"
    patch_release_label: "release:patch"
  steps:
    - uses: actions/checkout@v3

    - uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install modules
      run: pnpm i

    - name: Get current version
      id: get-current-version
      run: |
        result=$(npx dot-json@1 package.json version)
        echo "version=${result}" >> $GITHUB_OUTPUT

    - name: Get next version
      id: get-next-version
      uses: mmrakt/update-semantic-versioning-action@v0.1.0
      with:
        layer: |
          ${{
            contains(github.event.pull_request.labels.*.name, ${major_release_label}) && 'major' ||
            contains(github.event.pull_request.labels.*.name, ${minor_release_label}) && 'minor' ||
            'patch'
          }}
        version: ${{ steps.get-current-version.outputs.version }}

    - name: Configuration GitHub
      if: steps.diff.outputs.changed == '0'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Update versioning
      run: |
        npx dot-json@1 manifest.json version "${{ steps.get-next-version.outputs.version }}"
        npx dot-json@1 package.json version "${{ steps.get-next-version.outputs.version }}"

    - name: Push diff
      run: |
        git add .
        git commit -m ":thumbsup: Bump up to v$(grep version package.json | awk -F \" '{print $4}')"
        git push origin HEAD

    - name: Build
      run: pnpm build

    # - name: Submit Chrome web store
    #   run: |
    #     npx chrome-webstore-upload-cli@2 upload --source extension.zip --auto-publish
    #   env:
    #     EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
    #     CLIENT_ID: ${{ secrets.CLIENT_ID }}
    #     CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
    #     REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}

    # - name: Create release draft
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     tag_name: "v${{ steps.get-next-version.outputs.version }}"
    #     generate_release_notes: true
    #     files: extension.zip
