name: "update-chrome-extension-version-action"
description: "Automatically update chrome extension version action"
inputs:
  github_token:
    description: "GitHub access token"
    required: true
    default: ""
  manifest_file_path:
    description: "File path of manifest file with version"
    required: false
    default: "manifest.json"
  upload_chrome_web_store:
    description: "Automatically upload chrome web store"
    required: false
    default: false
  chrome_extension_id:
    description: "Chrome extension id"
    required: false
    default: ""
  google_client_id:
    description: "GCP client id"
    required: false
    default: ""
  google_client_secret:
    description: "GCP client secret"
    required: false
    default: ""
  refresh_token:
    description: "Refresh token"
    required: false
    default: ""
  zip_file_name:
    description: "Zip file name"
    required: false
    default: "output"
  out_dir:
    description: "Output directory path"
    required: false
    default: "./dist"
  create_release_note:
    description: "Automatically create release notes"
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install modules
      run: pnpm i
      shell: bash

    - name: Get current version
      id: get-current-version
      run: |
        result=$(npx dot-json@1 package.json version)
        echo "version=${result}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get next version
      id: get-next-version
      uses: mmrakt/update-semantic-versioning-action@v0.1.0
      with:
        layer: |
          ${{
            contains(github.event.pull_request.labels.*.name, 'release:major') && 'major' ||
            contains(github.event.pull_request.labels.*.name, 'release:minor') && 'minor' ||
            'patch'
          }}
        version: ${{ steps.get-current-version.outputs.version }}

    - name: Configuration GitHub
      if: steps.diff.outputs.changed == '0'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Update versioning
      run: |
        npx dot-json@1 ${{ inputs.manifest_file_path }} version "${{ steps.get-next-version.outputs.version }}"
        npx dot-json@1 package.json version "${{ steps.get-next-version.outputs.version }}"
      shell: bash

    - name: Push diff
      run: |
        git add .
        git commit -m ":thumbsup: Bump up to v$(grep version package.json | awk -F \" '{print $4}')"
        git push origin HEAD
      shell: bash

    - name: Build and zip
      run: |
        pnpm build
        zip -r ${{ inputs.zip_file_name }}.zip ${{ inputs.out_dir }}
      shell: bash
      if: ${{ inputs.create_release_note == 'true' || inputs.upload_chrome_web_store == 'true' }}

    - name: Upload Chrome web store
      run: |
        npx chrome-webstore-upload-cli@2 upload --source ${{ inputs.zip_file_name }}.zip --auto-publish
      env:
        EXTENSION_ID: ${{ inputs.chrome_extension_id }}
        CLIENT_ID: ${{ inputs.google_client_id }}
        CLIENT_SECRET: ${{ inputs.google_client_secret }}
        REFRESH_TOKEN: ${{ inputs.refresh_token }}
      if: ${{ inputs.upload_chrome_web_store == 'true' }}
      shell: bash

    - name: Create release draft
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.get-next-version.outputs.version }}"
        generate_release_notes: true
        files: ${{ inputs.zip_file_name }}
      if: ${{ inputs.create_release_note == 'true' }}
