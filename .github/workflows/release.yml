name: Release
on:
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:
  Release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install modules
        run: pnpm i
      - name: Get current version
        id: get-current-version
        run: |
          result=$(npx dot-json@1 package.json version)
          echo "version=${result}" >> $GITHUB_OUTPUT
      - name: Get next version
        id: get-next-version
        uses: mmrakt/chrome-extension-auto-release-sandbox@v0.1
        with:
          layer: |
            ${{
              contains(github.event.pull_request.labels.*.name, 'release:major') && 'major' ||
              contains(github.event.pull_request.labels.*.name, 'release:minor') && 'minor' ||
              contains(github.event.pull_request.labels.*.name, 'release:patch') && 'patch' ||
              'patch'
            }}
          version: ${{ steps.get-current-version.outputs.version }}
      - name: Update version
        run: |
          npx dot-json@1 manifest.json version ${{ steps.get-next-version.outputs.version }}
          npx dot-json@1 package.json version ${{ steps.get-next-version.outputs.version }}
      - name: Configuration GitHub
        if: steps.diff.outputs.changed == '0'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push
        run: |
          git add .
          git commit -m "v$(grep version package.json | awk -F \" '{print $4}')"
          git push origin HEAD
      - run: pnpm build
      # - name: Submit Chrome web store
      #   run: |
      #     npx chrome-webstore-upload-cli@2 upload --source extension.zip --auto-publish
      #   env:
      #     EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
      #     CLIENT_ID: ${{ secrets.CLIENT_ID }}
      #     CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      #     REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      # - name: Create release draft
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: ${{ steps.daily-version.outputs.version }}
      #     generate_release_notes: true
      #     files: extension.zip
